xVector = (-width/2):(width/2);
yVector = transpose((-height/2):(height/2));
radiusMatrix = sqrt(stack_horizontally(xVector, times = height)**2 +
    stack_vertically(yVector, times = width)**2)

highPassFilter = radiusMatrix > lowSpatialFrequencyCutoff;

for each frame in numberOfFrames:
    smoothedFrame = gaussian_filter(inputVideo[,,frame], smoothing);
    lowSpatialFreqRemovedFrame = abs(
        inverse_fast_fourier_transform(
            fast_fourier_transform(smoothedFrame) .*
            inverse_fast_fourier_transform_shift(highPassFilter)));
    normalizedFrame = normalize(lowSpatialFreqRemovedFrame);

    inputVideo[,,frame] = normalizedFrame;
